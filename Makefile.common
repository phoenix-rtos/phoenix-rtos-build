#
# Common makefile for Phoenix-RTOS 3
#
# Copyright 2020 Phoenix Systems
#
# %LICENSE%
#

# set SIL to "" for verbose output
SIL ?= @

# function - returns the directory of the current Makefile
my-dir = $(dir $(lastword $(MAKEFILE_LIST)))
MAKES_PATH := $(abspath $(call my-dir))/makes

#
# setup basic variables
#
TARGET_FAMILY ?= $(firstword $(subst -, ,$(TARGET)-))
TARGET_SUBFAMILY ?= $(word 2,$(subst -, ,$(TARGET)-))

CFLAGS :=

TOPDIR := $(CURDIR)
PREFIX_BUILD ?= ../_build/$(TARGET)
PREFIX_BUILD := $(abspath $(PREFIX_BUILD))
BUILD_DIR ?= $(PREFIX_BUILD)/$(notdir $(TOPDIR))
BUILD_DIR := $(abspath $(BUILD_DIR))

# build artifacts dir
CURR_SUFFIX := $(patsubst $(TOPDIR)/%,%,$(abspath $(CURDIR))/)
PREFIX_O := $(BUILD_DIR)/$(CURR_SUFFIX)

# target install paths, can be provided exterally
PREFIX_A ?= $(PREFIX_BUILD)/lib/
PREFIX_H ?= $(PREFIX_BUILD)/include/
PREFIX_PROG ?= $(PREFIX_BUILD)/prog/
PREFIX_PROG_STRIPPED ?= $(PREFIX_BUILD)/prog.stripped/


# Check TARGET and set building options
include $(MAKES_PATH)/check-target.mk

# setup tools
include $(MAKES_PATH)/setup-tools.mk

# provide template files' paths to external makes
binary.mk := $(MAKES_PATH)/binary.mk
static-lib.mk := $(MAKES_PATH)/static-lib.mk


#
# Common rules
#

ifneq ($(KERNEL), 1)
  CFLAGS += -I$(PREFIX_H)
endif

ARCH =  $(SIL)@mkdir -p $(@D); \
	(printf "AR  %-24s\n" "$(@F)"); \
	$(AR) $(ARFLAGS) $@ $^ 2>/dev/null

LINK =  $(SIL)mkdir -p $(@D); \
	(printf "LD  %-24s\n" "$(@F)"); \
	$(LD) $(LDFLAGS) -o "$@"  $^ $(LDLIBS)

HEADER = $(SIL)mkdir -p $(@D); \
	(printf "HEADER %-24s\n" "$<"); \
	cp -pR "$<" "$@"

INSTALL_FS = $(SIL)printf "INSTALL %s\n" "$(@:$(PREFIX_ROOTFS)%=%)"; \
     mkdir -p "$(@D)"; \
     install -m 755 "$<" "$(@D)"

$(PREFIX_O)%.o: %.c
	@mkdir -p $(@D)
	@(printf "CC  %-24s\n" "$<")
	$(SIL)$(CC) -c $(CFLAGS) "$(abspath $<)" -o "$@"
	$(SIL)$(CC) -M  -MD -MP -MF $(PREFIX_O)$*.c.d -MT "$@" $(CFLAGS) $<

$(PREFIX_O)%.o: %.S
	@mkdir -p $(@D)
	@(printf "ASM %-24s\n" "$<")
	$(SIL)$(CC) -c $(CFLAGS) "$<" -o "$@"
	$(SIL)$(CC) -M  -MD -MP -MF $(PREFIX_O)$*.S.d -MT "$@" $(CFLAGS) $<

$(PREFIX_PROG_STRIPPED)%: $(PREFIX_PROG)%
	@mkdir -p $(@D)
	@(printf "STR %-24s\n" "$(@F)")
	$(SIL)$(STRIP) --strip-unneeded -o $@ $<
