diff -Naur gcc-9.3.0-orig/gcc/config/sparc/sparc.c gcc-9.3.0/gcc/config/sparc/sparc.c
--- gcc-9.3.0-orig/gcc/config/sparc/sparc.c
+++ gcc-9.3.0/gcc/config/sparc/sparc.c
@@ -575,6 +575,8 @@ struct GTY(()) machine_function
   bool prologue_data_valid_p;
 };
 
+static GTY(()) rtx got_register_rtx = NULL_RTX;
+
 #define sparc_frame_size		cfun->machine->frame_size
 #define sparc_apparent_frame_size	cfun->machine->apparent_frame_size
 #define sparc_frame_base_reg		cfun->machine->frame_base_reg
@@ -2116,6 +2118,16 @@ sparc_option_override (void)
   if (!global_options_set.x_flag_ree && TARGET_ARCH32)
     flag_ree = 0;
 
+  if (!sparc_pic_data_is_text_relative && !flag_pic)
+    error ("-mno-pic-data-is-text-relative cannot be used without -fpic/-fPIC");
+
+  if (sparc_pic_register_string != NULL)
+    {
+      int pic_register = decode_reg_name (sparc_pic_register_string);
+
+      got_register_rtx = gen_rtx_REG (Pmode, pic_register);
+    }
+
   /* Do various machine dependent initializations.  */
   sparc_init_modes ();

@@ -2219,6 +2231,9 @@ can_use_mov_pic_label_ref (rtx label)
   if (flag_reorder_blocks_and_partition)
     return false;
 
+  if (!sparc_pic_data_is_text_relative)
+    return false;
+
   return true;
 }
 
@@ -4242,6 +4257,5 @@ sparc_cannot_force_const_mem (machine_mode mode, rtx x)
 /* Global Offset Table support.  */
 static GTY(()) rtx got_symbol_rtx = NULL_RTX;
-static GTY(()) rtx got_register_rtx = NULL_RTX;
 static GTY(()) rtx got_helper_rtx = NULL_RTX;
 
 static GTY(()) bool got_helper_needed = false;
@@ -4314,6 +4325,9 @@ load_got_register (void)
 {
   rtx insn;
 
+  if (!sparc_pic_data_is_text_relative)
+    return;
+
   if (TARGET_VXWORKS_RTP)
     {
       if (!got_register_rtx)

diff -Naur gcc-9.3.0-orig/gcc/config/sparc/sparc.h gcc-9.3.0/gcc/config/sparc/sparc.h
--- gcc-9.3.0-orig/gcc/config/sparc/sparc.h
+++ gcc-9.3.0/gcc/config/sparc/sparc.h
@@ -810,6 +810,10 @@ along with GCC; see the file COPYING3.  If not see
 #define PIC_OFFSET_TABLE_REGNUM \
   (TARGET_VXWORKS_RTP && flag_pic ? GLOBAL_OFFSET_TABLE_REGNUM : INVALID_REGNUM)
 
+#ifndef TARGET_DEFAULT_PIC_DATA_IS_TEXT_RELATIVE
+#define TARGET_DEFAULT_PIC_DATA_IS_TEXT_RELATIVE 1
+#endif
+
 /* Pick a default value we can notice from override_options:
    !v9: Default is on.
    v9: Default is off.

diff -Naur gcc-9.3.0-orig/gcc/config/sparc/sparc.opt gcc-9.3.0/gcc/config/sparc/sparc.opt
--- gcc-9.3.0-orig/gcc/config/sparc/sparc.opt
+++ gcc-9.3.0/gcc/config/sparc/sparc.opt
@@ -321,3 +321,11 @@ Enum(sparc_memory_model) String(tso) Value(SMM_TSO)
 
 EnumValue
 Enum(sparc_memory_model) String(sc) Value(SMM_SC)
+
+mpic-data-is-text-relative
+Target Report Var(sparc_pic_data_is_text_relative) Init(TARGET_DEFAULT_PIC_DATA_IS_TEXT_RELATIVE)
+Assume data segments are relative to text segment.
+
+mpic-register=
+Target RejectNegative Joined Var(sparc_pic_register_string)
+Specify the register to be used for PIC addressing.

diff -Naur gcc-9.3.0-orig/gcc/configure gcc-9.3.0/gcc/configure
--- gcc-9.3.0-orig/gcc/configure
+++ gcc-9.3.0/gcc/configure
@@ -25548,11 +25548,11 @@ bar:
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_sparc_gotdata_op" >&5
 $as_echo "$gcc_cv_as_sparc_gotdata_op" >&6; }
-if test $gcc_cv_as_sparc_gotdata_op = yes; then
+# if test $gcc_cv_as_sparc_gotdata_op = yes; then
 
-$as_echo "#define HAVE_AS_SPARC_GOTDATA_OP 1" >>confdefs.h
+# $as_echo "#define HAVE_AS_SPARC_GOTDATA_OP 1" >>confdefs.h
 
-fi
+# fi
 
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking assembler for unaligned pcrel relocs" >&5
