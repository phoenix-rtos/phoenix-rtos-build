diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -9239,6 +9239,30 @@ $as_echo_n "checking for $compiler option to produce PIC... " >&6; }
     lt_prog_compiler_static='-static'
 
     case $host_os in
+      phoenix)
+        case $host_cpu in
+          arm)
+            # Phoenix system for arms without MMU requires files to be compiled with some certain flags.
+            # lt_prog_compiler_pic is a variable which contains these flags for C files that are
+            # involved in libstdc++.
+
+            arch=$(echo "$CXX" | sed 's/.* -march=\([^ ]*\).*/\1/')
+
+            if [[ "$arch" =~ "armv7-m" ]] || [[ "$arch" =~ "armv7-r" ]] || [[ "$arch" =~ "armv7e-m" ]] || [[ "$arch" =~ "armv8-m" ]] || [[ "$arch" =~ "armv8-r" ]]; then
+              lt_prog_compiler_pic="$lt_prog_compiler_pic -fPIC -fPIE -msingle-pic-base -mno-pic-data-is-text-relative"
+            fi
+            ;;
+
+          sparc)
+            # Necessary flags are passed through multilib options.
+            ;;
+
+          *)
+            lt_prog_compiler_pic='-fPIC'
+            ;;
+        esac
+        ;;
+
       aix*)
       # All AIX code is PIC.
       if test "$host_cpu" = ia64; then
@@ -9513,6 +9537,36 @@ case $host_os in
   *djgpp*)
     lt_prog_compiler_pic=
     ;;
+
+  # Not all arm targets support PIC configuration
+  phoenix)
+    case $host_cpu in
+      arm)
+        # Phoenix system for arms without MMU requires files to be compiled with some certain flags.
+        # One of them is -fPIC which is complemented by macro -fPID. In this "case" is decided whether
+        # to add this macro or not.
+
+        arch=$(echo "$CXX" | sed 's/.* -march=\([^ ]*\).*/\1/')
+
+        if [[ "$arch" =~ "armv7-m" ]] || [[ "$arch" =~ "armv7-r" ]] || [[ "$arch" =~ "armv7e-m" ]] || [[ "$arch" =~ "armv8-m" ]] || [[ "$arch" =~ "armv8-r" ]]; then
+          lt_prog_compiler_pic="$lt_prog_compiler_pic -DPIC"
+        fi
+        ;;
+
+      sparc)
+
+        if [[ "$CXX" == *"mno-pic-data-is-text-relative"* ]]; then
+          lt_prog_compiler_pic="$lt_prog_compiler_pic -DPIC"
+        fi
+        ;;
+
+      # For other targets the behaviour should be default
+      *)
+        lt_prog_compiler_pic="$lt_prog_compiler_pic -DPIC"
+        ;;
+    esac
+    ;;
+
   *)
     lt_prog_compiler_pic="$lt_prog_compiler_pic -DPIC"
     ;;
@@ -11987,6 +12041,9 @@ else
   lt_cv_dlopen_libs=
 
   case $host_os in
+  phoenix*)
+    ;;
+
   beos*)
     lt_cv_dlopen="load_add_on"
     lt_cv_dlopen_libs=
@@ -14235,6 +14292,31 @@ $as_echo_n "checking for $compiler option to produce PIC... " >&6; }
     lt_prog_compiler_static_CXX='-static'
 
     case $host_os in
+    phoenix)
+      case $host_cpu in
+        arm)
+          # Phoenix system for arms without MMU requires files to be compiled with some certain flags.
+          # lt_prog_compiler_pic_CXX is a variable which contains these flags for C++ files that are
+          # involved in libstdc++.
+
+          arch=$(echo "$CXX" | sed 's/.* -march=\([^ ]*\).*/\1/')
+
+          if [[ "$arch" =~ "armv7-m" ]] || [[ "$arch" =~ "armv7-r" ]] || [[ "$arch" =~ "armv7e-m" ]] || [[ "$arch" =~ "armv8-m" ]] || [[ "$arch" =~ "armv8-r" ]]; then
+            lt_prog_compiler_pic_CXX="$lt_prog_compiler_pic_CXX -fPIC -fPIE -msingle-pic-base -mno-pic-data-is-text-relative"
+          fi
+
+        ;;
+
+        sparc)
+          # Necessary flags are passed through multilib options.
+          ;;
+
+        *)
+          lt_prog_compiler_pic_CXX='-fPIC'
+        ;;
+      esac
+    ;;
+
     aix*)
       # All AIX code is PIC.
       if test "$host_cpu" = ia64; then
@@ -14545,6 +14627,36 @@ case $host_os in
   *djgpp*)
     lt_prog_compiler_pic_CXX=
     ;;
+
+  # Not all arm targets support PIC
+  phoenix)
+    case $host_cpu in
+      arm)
+        # Phoenix system for arms without MMU requires files to be compiled with some certain flags.
+        # One of them is -fPIC which is complemented by macro -fPID. In this "case" is decided whether
+        # to add this macro or not.
+
+        arch=$(echo "$CXX" | sed 's/.* -march=\([^ ]*\).*/\1/')
+
+        if [[ "$arch" =~ "armv7-m" ]] || [[ "$arch" =~ "armv7-r" ]] || [[ "$arch" =~ "armv7e-m" ]] || [[ "$arch" =~ "armv8-m" ]] || [[ "$arch" =~ "armv8-r" ]]; then
+          lt_prog_compiler_pic_CXX="$lt_prog_compiler_pic_CXX -DPIC"
+        fi
+        ;;
+
+      sparc)
+
+        if [[ "$CXX" == *"mno-pic-data-is-text-relative"* ]]; then
+          lt_prog_compiler_pic_CXX="$lt_prog_compiler_pic_CXX -DPIC"
+        fi
+        ;;
+
+      # For other arm targets the behaviour should be default
+      *)
+        lt_prog_compiler_pic="$lt_prog_compiler_pic -DPIC"
+        ;;
+    esac
+    ;;
+
   *)
     lt_prog_compiler_pic_CXX="$lt_prog_compiler_pic_CXX -DPIC"
     ;;
@@ -15783,6 +15895,13 @@ if test "$enable_shared" = yes; then
   glibcxx_compiler_pic_flag="$lt_prog_compiler_pic_CXX"
   glibcxx_compiler_shared_flag="-D_GLIBCXX_SHARED"
 
+elif test "$pic_mode" = yes; then
+  # It was not possible to use pic without shared libraries in the default configure file
+  # due to the above code. If the "shaded" option is not enabled, the selected
+  # lt_prog_compiler_pic_CXX flags will not be propagated to makefiles.
+
+  glibcxx_lt_pic_flag="-prefer-pic"
+  glibcxx_compiler_pic_flag="$lt_prog_compiler_pic_CXX"
 else
   glibcxx_lt_pic_flag=
   glibcxx_compiler_pic_flag=
@@ -50574,6 +50693,61 @@ _ACEOF
 
 
 
+    ;;
+  *-phoenix*)
+      os_include_dir="os/generic"
+      printf "%s\n" "#define HAVE_HYPOT 1" >>confdefs.h
+
+
+      # GLIBCXX_CHECK_STDLIB_SUPPORT
+      printf "%s\n" "#define HAVE_STRTOF 1" >>confdefs.h
+
+
+      printf "%s\n" "#define HAVE_ACOSF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_ASINF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_ATAN2F 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_ATANF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_CEILF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_COSF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_COSHF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_EXPF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_FABSF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_FLOORF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_FMODF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_FREXPF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_LDEXPF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_LOG10F 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_LOGF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_MODFF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_POWF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_SINF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_SINHF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_SQRTF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_TANF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_TANHF 1" >>confdefs.h
+
+      printf "%s\n" "#define HAVE_STRTOLD 1" >>confdefs.h
     ;;
   *)
     as_fn_error $? "No support for this host/target combination." "$LINENO" 5
@@ -53875,6 +54049,9 @@ done
      *) have_fcntl=yes ;;
      esac
   else
+    case "${host}" in
+      *-*-phoenix*) have_fcntl=yes ;;
+      *)
     ac_fn_c_check_func "$LINENO" "fcntl" "ac_cv_func_fcntl"
 if test "x$ac_cv_func_fcntl" = xyes; then :
   have_fcntl=yes
@@ -53882,6 +54059,8 @@ else
   have_fcntl=no
 fi
 
+      ;;
+    esac
   fi
   if test "$have_fcntl" = "yes"; then
     BACKTRACE_CPPFLAGS="$BACKTRACE_CPPFLAGS -DHAVE_FCNTL=1"
@@ -53906,6 +54085,9 @@ _ACEOF
      *) have_getexecname=no ;;
      esac
   else
+    case "${host}" in
+      *-*-phoenix*) have_fcntl=yes ;;
+      *)
     ac_fn_c_check_func "$LINENO" "getexecname" "ac_cv_func_getexecname"
 if test "x$ac_cv_func_getexecname" = xyes; then :
   have_getexecname=yes
@@ -53913,6 +54095,8 @@ else
   have_getexecname=no
 fi
 
+      ;;
+    esac
   fi
   if test "$have_getexecname" = "yes"; then
     BACKTRACE_CPPFLAGS="$BACKTRACE_CPPFLAGS -DHAVE_GETEXECNAME=1"

