#
# Makefile for libphoenix
#
# ARMv7 (Cortex-M3/M4) options
#
# Copyright 2018, 2020 Phoenix Systems
#

CROSS ?= arm-phoenix-

MKDEP = $(CROSS)gcc -MM
MKDEPFLAGS = $(CFLAGS)

CC = $(CROSS)gcc

ifeq ($(DEBUG), 1)
	CFLAGS += -Og
else
	CFLAGS += -O2 -DNDEBUG
endif

ifeq ($(TARGET_FAMILY), armv7m7)
	#FIXME: -mfpu=fpv5-d16 does not work with current toolchain
	CFLAGS += -Wall -Wstrict-prototypes -g -I$(SRCDIR) -nostartfiles -nostdlib\
		-mcpu=cortex-m7 -mfloat-abi=hard -mfpu=fpv5-sp-d16 -mthumb -fomit-frame-pointer\
		-ffreestanding -mno-unaligned-access\
		-fpic -fpie -msingle-pic-base -mno-pic-data-is-text-relative -DNOMMU

else ifeq ($(TARGET_FAMILY), armv7m4)

	CFLAGS += -Wall -Wstrict-prototypes -g -I$(SRCDIR) -nostartfiles -nostdlib\
		-mthumb -fomit-frame-pointer -ffreestanding -mno-unaligned-access\
		-fpic -fpie -msingle-pic-base -mno-pic-data-is-text-relative -DNOMMU -fstack-usage\
		-mcpu=cortex-m4

else ifeq ($(TARGET_FAMILY), armv7m3)
	CFLAGS += -Wall -Wstrict-prototypes -g -I$(SRCDIR) -nostartfiles -nostdlib\
		-mthumb -fomit-frame-pointer -ffreestanding -mno-unaligned-access\
		-fpic -fpie -msingle-pic-base -mno-pic-data-is-text-relative -DNOMMU -fstack-usage\
		-mcpu=cortex-m3
endif

CFLAGS += -fdata-sections -ffunction-sections

AR = $(CROSS)ar
ARFLAGS = -r

LD = $(CROSS)ld
LDFLAGS = -nostdlib -e _start --section-start .text=0 -Tbss=20000000 -z max-page-size=0x10 --gc-sections
GCCLIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)
PHOENIXLIB := $(shell $(CC) $(CFLAGS) -print-file-name=libphoenix.a)
LDLIBS := $(PHOENIXLIB) $(GCCLIB)

OBJCOPY = $(CROSS)objcopy
OBJDUMP = $(CROSS)objdump
STRIP = $(CROSS)strip
